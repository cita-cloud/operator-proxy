// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: api/citacloud/cita_cloud.proto

package citacloud

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConsensusType int32

const (
	ConsensusType_BFT  ConsensusType = 0
	ConsensusType_Raft ConsensusType = 1
)

// Enum value maps for ConsensusType.
var (
	ConsensusType_name = map[int32]string{
		0: "BFT",
		1: "Raft",
	}
	ConsensusType_value = map[string]int32{
		"BFT":  0,
		"Raft": 1,
	}
)

func (x ConsensusType) Enum() *ConsensusType {
	p := new(ConsensusType)
	*p = x
	return p
}

func (x ConsensusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsensusType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_citacloud_cita_cloud_proto_enumTypes[0].Descriptor()
}

func (ConsensusType) Type() protoreflect.EnumType {
	return &file_api_citacloud_cita_cloud_proto_enumTypes[0]
}

func (x ConsensusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConsensusType.Descriptor instead.
func (ConsensusType) EnumDescriptor() ([]byte, []int) {
	return file_api_citacloud_cita_cloud_proto_rawDescGZIP(), []int{0}
}

type ChainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string        `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Id            string        `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp     string        `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Prevhash      string        `protobuf:"bytes,5,opt,name=prevhash,proto3" json:"prevhash,omitempty"`
	BlockInterval int32         `protobuf:"varint,6,opt,name=blockInterval,proto3" json:"blockInterval,omitempty"`
	BlockLimit    int32         `protobuf:"varint,7,opt,name=blockLimit,proto3" json:"blockLimit,omitempty"`
	EnableTls     bool          `protobuf:"varint,8,opt,name=enableTls,proto3" json:"enableTls,omitempty"`
	KmsPassword   string        `protobuf:"bytes,9,opt,name=kmsPassword,proto3" json:"kmsPassword,omitempty"`
	ConsensusType ConsensusType `protobuf:"varint,10,opt,name=consensusType,proto3,enum=citacloud.ConsensusType" json:"consensusType,omitempty"`
}

func (x *ChainConfig) Reset() {
	*x = ChainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_citacloud_cita_cloud_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfig) ProtoMessage() {}

func (x *ChainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_citacloud_cita_cloud_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfig.ProtoReflect.Descriptor instead.
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return file_api_citacloud_cita_cloud_proto_rawDescGZIP(), []int{0}
}

func (x *ChainConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChainConfig) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ChainConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChainConfig) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ChainConfig) GetPrevhash() string {
	if x != nil {
		return x.Prevhash
	}
	return ""
}

func (x *ChainConfig) GetBlockInterval() int32 {
	if x != nil {
		return x.BlockInterval
	}
	return 0
}

func (x *ChainConfig) GetBlockLimit() int32 {
	if x != nil {
		return x.BlockLimit
	}
	return 0
}

func (x *ChainConfig) GetEnableTls() bool {
	if x != nil {
		return x.EnableTls
	}
	return false
}

func (x *ChainConfig) GetKmsPassword() string {
	if x != nil {
		return x.KmsPassword
	}
	return ""
}

func (x *ChainConfig) GetConsensusType() ConsensusType {
	if x != nil {
		return x.ConsensusType
	}
	return ConsensusType_BFT
}

type ChainConfigSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ChainConfigSimple) Reset() {
	*x = ChainConfigSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_citacloud_cita_cloud_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainConfigSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfigSimple) ProtoMessage() {}

func (x *ChainConfigSimple) ProtoReflect() protoreflect.Message {
	mi := &file_api_citacloud_cita_cloud_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfigSimple.ProtoReflect.Descriptor instead.
func (*ChainConfigSimple) Descriptor() ([]byte, []int) {
	return file_api_citacloud_cita_cloud_proto_rawDescGZIP(), []int{1}
}

func (x *ChainConfigSimple) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChainConfigSimple) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

var File_api_citacloud_cita_cloud_proto protoreflect.FileDescriptor

var file_api_citacloud_cita_cloud_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x74, 0x61, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f,
	0x63, 0x69, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x63, 0x69, 0x74, 0x61, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x22, 0xcf, 0x02, 0x0a, 0x0b,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6b,
	0x6d, 0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6b, 0x6d, 0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x3e, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x69, 0x74, 0x61, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x45, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2a, 0x22, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x46, 0x54, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x52, 0x61, 0x66, 0x74, 0x10, 0x01, 0x32, 0x5d, 0x0a, 0x10, 0x43, 0x69, 0x74, 0x61,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x16, 0x2e, 0x63, 0x69, 0x74, 0x61, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1c, 0x2e, 0x63, 0x69, 0x74, 0x61,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x69, 0x74, 0x61, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x69, 0x74, 0x61, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_citacloud_cita_cloud_proto_rawDescOnce sync.Once
	file_api_citacloud_cita_cloud_proto_rawDescData = file_api_citacloud_cita_cloud_proto_rawDesc
)

func file_api_citacloud_cita_cloud_proto_rawDescGZIP() []byte {
	file_api_citacloud_cita_cloud_proto_rawDescOnce.Do(func() {
		file_api_citacloud_cita_cloud_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_citacloud_cita_cloud_proto_rawDescData)
	})
	return file_api_citacloud_cita_cloud_proto_rawDescData
}

var file_api_citacloud_cita_cloud_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_citacloud_cita_cloud_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_citacloud_cita_cloud_proto_goTypes = []interface{}{
	(ConsensusType)(0),        // 0: citacloud.ConsensusType
	(*ChainConfig)(nil),       // 1: citacloud.ChainConfig
	(*ChainConfigSimple)(nil), // 2: citacloud.ChainConfigSimple
}
var file_api_citacloud_cita_cloud_proto_depIdxs = []int32{
	0, // 0: citacloud.ChainConfig.consensusType:type_name -> citacloud.ConsensusType
	1, // 1: citacloud.CitaCloudService.CreateChainConfig:input_type -> citacloud.ChainConfig
	2, // 2: citacloud.CitaCloudService.CreateChainConfig:output_type -> citacloud.ChainConfigSimple
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_citacloud_cita_cloud_proto_init() }
func file_api_citacloud_cita_cloud_proto_init() {
	if File_api_citacloud_cita_cloud_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_citacloud_cita_cloud_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_citacloud_cita_cloud_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainConfigSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_citacloud_cita_cloud_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_citacloud_cita_cloud_proto_goTypes,
		DependencyIndexes: file_api_citacloud_cita_cloud_proto_depIdxs,
		EnumInfos:         file_api_citacloud_cita_cloud_proto_enumTypes,
		MessageInfos:      file_api_citacloud_cita_cloud_proto_msgTypes,
	}.Build()
	File_api_citacloud_cita_cloud_proto = out.File
	file_api_citacloud_cita_cloud_proto_rawDesc = nil
	file_api_citacloud_cita_cloud_proto_goTypes = nil
	file_api_citacloud_cita_cloud_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CitaCloudServiceClient is the client API for CitaCloudService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CitaCloudServiceClient interface {
	CreateChainConfig(ctx context.Context, in *ChainConfig, opts ...grpc.CallOption) (*ChainConfigSimple, error)
}

type citaCloudServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCitaCloudServiceClient(cc grpc.ClientConnInterface) CitaCloudServiceClient {
	return &citaCloudServiceClient{cc}
}

func (c *citaCloudServiceClient) CreateChainConfig(ctx context.Context, in *ChainConfig, opts ...grpc.CallOption) (*ChainConfigSimple, error) {
	out := new(ChainConfigSimple)
	err := c.cc.Invoke(ctx, "/citacloud.CitaCloudService/CreateChainConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CitaCloudServiceServer is the server API for CitaCloudService service.
type CitaCloudServiceServer interface {
	CreateChainConfig(context.Context, *ChainConfig) (*ChainConfigSimple, error)
}

// UnimplementedCitaCloudServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCitaCloudServiceServer struct {
}

func (*UnimplementedCitaCloudServiceServer) CreateChainConfig(context.Context, *ChainConfig) (*ChainConfigSimple, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChainConfig not implemented")
}

func RegisterCitaCloudServiceServer(s *grpc.Server, srv CitaCloudServiceServer) {
	s.RegisterService(&_CitaCloudService_serviceDesc, srv)
}

func _CitaCloudService_CreateChainConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChainConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CitaCloudServiceServer).CreateChainConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/citacloud.CitaCloudService/CreateChainConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CitaCloudServiceServer).CreateChainConfig(ctx, req.(*ChainConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _CitaCloudService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "citacloud.CitaCloudService",
	HandlerType: (*CitaCloudServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateChainConfig",
			Handler:    _CitaCloudService_CreateChainConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/citacloud/cita_cloud.proto",
}
